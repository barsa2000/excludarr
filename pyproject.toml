[tool.poetry]
name = "excludarr"
version = "1.0.8"
description = "Excludarr excludes streaming services from Radarr and Sonarr"
authors = ["Haije Ploeg <ploeg.haije@gmail.com>"]
license = "GPL-3.0-only"
readme = "README.md"
homepage = "https://github.com/ecludarr/excludarr"
repository = "https://github.com/ecludarr/excludarr"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3 :: Only",
]
keywords = [
    "excludarr",
    "radarr",
    "sonarr",
    "diskspace",
    "cleanup",
    "management",
    "library",
    "streaming",
    "netflix",
]
include = [
    { path = ".examples/", format = ["sdist"] },
    { path = "./docker-compose.yml", format = ["sdist"] },
    { path = "./Dockerfile", format = ["sdist"] },
    { path = "./entrypoint.sh", format = ["sdist"] },

    { path = ".examples/crontab", format = ["wheel"] },
    { path = ".examples/excludarr-example.yml", format = ["wheel"] },
    { path = ".examples/excludarr.svg", format = ["wheel"] },
]

[tool.poetry.urls]
"Bug Reports" = "https://github.com/haijeploeg/excludarr/issues"


[tool.poetry.scripts]
excludarr = "excludarr.main:cli"

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
typer = "^0.12.3"
loguru = "^0.7.2"
rich = "^13.7.1"
requests = "^2.32.3"
pyyaml = "^6.0.1"
pyarr = "^5.2.0"
simple-justwatch-python-api = "^0.14"


[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
pre-commit = "^3.7.1"
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
coverage = "^7.6.0"
twine = "^5.1.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
version_variable = [
    "excludarr/version.py:__version__",
    "pyproject.toml:version",
]
build_command = "pip install poetry && poetry build"

[tool.coverage.run]
branch = true
source = ["excludarr"]